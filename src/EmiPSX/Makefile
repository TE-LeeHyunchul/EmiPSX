#############################################################################
# Makefile for building: EmiPSX
# Generated by qmake (2.01a) (Qt 4.7.4) on: Tue 26. Mar 11:04:52 2013
# Project:  EmiPSX.pro
# Template: app
# Command: c:\qtsdk\symbian\sdks\symbiansr1qt474\bin\qmake.exe -spec c:\QtSDK\Symbian\SDKs\SymbianSR1Qt474\mkspecs\symbian-sbsv2 CONFIG+=release -after  OBJECTS_DIR=obj MOC_DIR=moc UI_DIR=ui RCC_DIR=rcc -o bld.inf EmiPSX.pro
#############################################################################

MAKEFILE          = Makefile
QMAKE             = c:\qtsdk\symbian\sdks\symbiansr1qt474\bin\qmake.exe
DEL_FILE          = del /q 2> NUL
DEL_DIR           = rmdir
CHK_DIR_EXISTS    = if not exist
MKDIR             = mkdir
MOVE              = move
DEBUG_PLATFORMS   = winscw gcce armv5 armv6
RELEASE_PLATFORMS = gcce armv5 armv6
MAKE              = make
SBS               = sbs

DEFINES	 = -DSYMBIAN -DUNICODE -DQT_KEYPAD_NAVIGATION -DQT_SOFTKEYS_ENABLED -DQT_USE_MATH_H_FLOATS -DXA_HACK -DBIOS_FILE="scph1001.bin" -DMCD1_FILE="mcd001.mcr" -DMCD2_FILE="mcd002.mcr" -DINLINE=__inline -Dgpu_unai -Dspu_franxis -Dgte_new -DMAEMO_CHANGES -DTIME_IN_MSEC -DARM_ARCH -DWITH_HLE -Dinterpreter_new -DQT_NO_DEBUG -DQT_DECLARATIVE_LIB -DQT_MULTIMEDIA_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB
INCPATH	 =  -I"C:/QtSDK/Symbian/SDKs/SymbianSR1Qt474/include/QtCore"  -I"C:/QtSDK/Symbian/SDKs/SymbianSR1Qt474/include/QtNetwork"  -I"C:/QtSDK/Symbian/SDKs/SymbianSR1Qt474/include/QtGui"  -I"C:/QtSDK/Symbian/SDKs/SymbianSR1Qt474/include/QtOpenGL"  -I"C:/QtSDK/Symbian/SDKs/SymbianSR1Qt474/include/QtMultimedia"  -I"C:/QtSDK/Symbian/SDKs/SymbianSR1Qt474/include/QtDeclarative"  -I"C:/QtSDK/Symbian/SDKs/SymbianSR1Qt474/include"  -I"C:/QtSDK/Symbian/SDKs/SymbianSR1Qt474/mkspecs/common/symbian"  -I"C:/QtSDK/Symbian/SDKs/SymbianSR1Qt474/epoc32/include"  -I"C:/QtSDK/Symbian/SDKs/SymbianSR1Qt474/epoc32/include/stdapis"  -I"C:/QtSDK/Symbian/SDKs/SymbianSR1Qt474/epoc32/include/stdapis/sys"  -I"C:/QtSDK/Symbian/SDKs/SymbianSR1Qt474/epoc32/include/mmf/server"  -I"C:/Users/Sacha/Desktop/Phones/SymbianCPP/emi-psx/src/gte/gte_new"  -I"C:/Users/Sacha/Desktop/Phones/SymbianCPP/emi-psx/src/spu/spu_franxis"  -I"C:/Users/Sacha/Desktop/Phones/SymbianCPP/emi-psx/src/gpu/gpu_unai"  -I"C:/Users/Sacha/Desktop/Phones/SymbianCPP/emi-psx/src/port/sdl"  -I"C:/Users/Sacha/Desktop/Phones/SymbianCPP/emi-psx/src"  -I"C:/QtSDK/Symbian/SDKs/SymbianSR1Qt474/epoc32/include/mw"  -I"C:/QtSDK/Symbian/SDKs/SymbianSR1Qt474/epoc32/include/platform/mw"  -I"C:/QtSDK/Symbian/SDKs/SymbianSR1Qt474/epoc32/include/platform"  -I"C:/QtSDK/Symbian/SDKs/SymbianSR1Qt474/epoc32/include/platform/loc"  -I"C:/QtSDK/Symbian/SDKs/SymbianSR1Qt474/epoc32/include/platform/mw/loc"  -I"C:/QtSDK/Symbian/SDKs/SymbianSR1Qt474/epoc32/include/platform/loc/sc"  -I"C:/QtSDK/Symbian/SDKs/SymbianSR1Qt474/epoc32/include/platform/mw/loc/sc"  -I"C:/QtSDK/Symbian/SDKs/SymbianSR1Qt474/epoc32/include/stdapis/stlportv5"  -I"C:/Users/Sacha/Desktop/Phones/SymbianCPP/emi-psx/src/EmiPSX/moc"  -I"C:/Users/Sacha/Desktop/Phones/SymbianCPP/emi-psx/src/EmiPSX"  -I"C:/Users/Sacha/Desktop/Phones/SymbianCPP/emi-psx/src/interpreter/interpreter_new"  -I"C:/Users/Sacha/Desktop/Phones/SymbianCPP/emi-psx/src/EmiPSX/rcc"  -I"C:/Users/Sacha/Desktop/Phones/SymbianCPP/emi-psx/src/EmiPSX/ui" 
first: default

all: debug release

default: debug-winscw
qmake:
	$(QMAKE) "C:/Users/Sacha/Desktop/Phones/SymbianCPP/emi-psx/src/EmiPSX/EmiPSX.pro"  -spec c:\QtSDK\Symbian\SDKs\SymbianSR1Qt474\mkspecs\symbian-sbsv2 CONFIG+=release -after  OBJECTS_DIR=obj MOC_DIR=moc UI_DIR=ui RCC_DIR=rcc

bld.inf: C:/Users/Sacha/Desktop/Phones/SymbianCPP/emi-psx/src/EmiPSX/EmiPSX.pro
	$(QMAKE) "C:/Users/Sacha/Desktop/Phones/SymbianCPP/emi-psx/src/EmiPSX/EmiPSX.pro"  -spec c:\QtSDK\Symbian\SDKs\SymbianSR1Qt474\mkspecs\symbian-sbsv2 CONFIG+=release -after  OBJECTS_DIR=obj MOC_DIR=moc UI_DIR=ui RCC_DIR=rcc

c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX.loc: 
	$(QMAKE) "C:/Users/Sacha/Desktop/Phones/SymbianCPP/emi-psx/src/EmiPSX/EmiPSX.pro"  -spec c:\QtSDK\Symbian\SDKs\SymbianSR1Qt474\mkspecs\symbian-sbsv2 CONFIG+=release -after  OBJECTS_DIR=obj MOC_DIR=moc UI_DIR=ui RCC_DIR=rcc

debug: c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX.loc bld.inf
	$(SBS) -c winscw_udeb.mwccinc -c arm.v5.udeb.gcce4_6_3 -c arm.v6.udeb.gcce4_6_3
clean-debug: bld.inf
	$(SBS) reallyclean --toolcheck=off -c winscw_udeb.mwccinc -c arm.v5.udeb.gcce4_6_3 -c arm.v6.udeb.gcce4_6_3
freeze-debug: bld.inf
	$(SBS) freeze -c winscw_udeb.mwccinc -c arm.v5.udeb.gcce4_6_3 -c arm.v6.udeb.gcce4_6_3
release: c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX.loc bld.inf
	$(SBS) -c arm.v5.urel.gcce4_6_3 -c arm.v6.urel.gcce4_6_3
clean-release: bld.inf
	$(SBS) reallyclean --toolcheck=off -c arm.v5.urel.gcce4_6_3 -c arm.v6.urel.gcce4_6_3
freeze-release: bld.inf
	$(SBS) freeze -c arm.v5.urel.gcce4_6_3 -c arm.v6.urel.gcce4_6_3

debug-winscw: c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX.loc bld.inf
	$(SBS) -c winscw_udeb.mwccinc
clean-debug-winscw: bld.inf
	$(SBS) reallyclean -c winscw_udeb.mwccinc
freeze-debug-winscw: bld.inf
	$(SBS) freeze -c winscw_udeb.mwccinc
debug-gcce: c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX.loc bld.inf
	$(SBS) -c arm.v5.udeb.gcce4_6_3
clean-debug-gcce: bld.inf
	$(SBS) reallyclean -c arm.v5.udeb.gcce4_6_3
freeze-debug-gcce: bld.inf
	$(SBS) freeze -c arm.v5.udeb.gcce4_6_3
debug-armv5: c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX.loc bld.inf
	$(SBS) -c armv5_udeb
clean-debug-armv5: bld.inf
	$(SBS) reallyclean -c armv5_udeb
freeze-debug-armv5: bld.inf
	$(SBS) freeze -c armv5_udeb
debug-armv6: c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX.loc bld.inf
	$(SBS) -c armv6_udeb
clean-debug-armv6: bld.inf
	$(SBS) reallyclean -c armv6_udeb
freeze-debug-armv6: bld.inf
	$(SBS) freeze -c armv6_udeb
release-gcce: c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX.loc bld.inf
	$(SBS) -c arm.v5.urel.gcce4_6_3
clean-release-gcce: bld.inf
	$(SBS) reallyclean -c arm.v5.urel.gcce4_6_3
freeze-release-gcce: bld.inf
	$(SBS) freeze -c arm.v5.urel.gcce4_6_3
release-armv5: c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX.loc bld.inf
	$(SBS) -c armv5_urel
clean-release-armv5: bld.inf
	$(SBS) reallyclean -c armv5_urel
freeze-release-armv5: bld.inf
	$(SBS) freeze -c armv5_urel
release-armv6: c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX.loc bld.inf
	$(SBS) -c armv6_urel
clean-release-armv6: bld.inf
	$(SBS) reallyclean -c armv6_urel
freeze-release-armv6: bld.inf
	$(SBS) freeze -c armv6_urel
debug-armv5-gcce4.6.3: c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX.loc bld.inf
	$(SBS) -c arm.v5.udeb.gcce4_6_3
clean-debug-armv5-gcce4.6.3: bld.inf
	$(SBS) reallyclean -c arm.v5.udeb.gcce4_6_3
freeze-debug-armv5-gcce4.6.3: bld.inf
	$(SBS) freeze -c arm.v5.udeb.gcce4_6_3
release-armv5-gcce4.6.3: c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX.loc bld.inf
	$(SBS) -c arm.v5.urel.gcce4_6_3
clean-release-armv5-gcce4.6.3: bld.inf
	$(SBS) reallyclean -c arm.v5.urel.gcce4_6_3
freeze-release-armv5-gcce4.6.3: bld.inf
	$(SBS) freeze -c arm.v5.urel.gcce4_6_3
debug-armv6-gcce4.6.3: c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX.loc bld.inf
	$(SBS) -c arm.v6.udeb.gcce4_6_3
clean-debug-armv6-gcce4.6.3: bld.inf
	$(SBS) reallyclean -c arm.v6.udeb.gcce4_6_3
freeze-debug-armv6-gcce4.6.3: bld.inf
	$(SBS) freeze -c arm.v6.udeb.gcce4_6_3
release-armv6-gcce4.6.3: c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX.loc bld.inf
	$(SBS) -c arm.v6.urel.gcce4_6_3
clean-release-armv6-gcce4.6.3: bld.inf
	$(SBS) reallyclean -c arm.v6.urel.gcce4_6_3
freeze-release-armv6-gcce4.6.3: bld.inf
	$(SBS) freeze -c arm.v6.urel.gcce4_6_3

export: bld.inf
	$(SBS) export -c winscw_udeb.mwccinc -c arm.v5.udeb.gcce4_6_3 -c arm.v6.udeb.gcce4_6_3 -c arm.v5.urel.gcce4_6_3 -c arm.v6.urel.gcce4_6_3

cleanexport: bld.inf
	$(SBS) cleanexport -c winscw_udeb.mwccinc -c arm.v5.udeb.gcce4_6_3 -c arm.v6.udeb.gcce4_6_3 -c arm.v5.urel.gcce4_6_3 -c arm.v6.urel.gcce4_6_3

freeze: freeze-release

check: first

run:
	call C:/QtSDK/Symbian/SDKs/SymbianSR1Qt474/epoc32/release/winscw/udeb/EmiPSX.exe $(QT_RUN_OPTIONS)

runonphone: sis
	runonphone $(QT_RUN_ON_PHONE_OPTIONS) --sis EmiPSX.sis EmiPSX.exe $(QT_RUN_OPTIONS)

EmiPSX_template.pkg: C:/Users/Sacha/Desktop/Phones/SymbianCPP/emi-psx/src/EmiPSX/EmiPSX.pro
	$(MAKE) -f $(MAKEFILE) qmake

EmiPSX_installer.pkg: C:/Users/Sacha/Desktop/Phones/SymbianCPP/emi-psx/src/EmiPSX/EmiPSX.pro
	$(MAKE) -f $(MAKEFILE) qmake

EmiPSX_stub.pkg: C:/Users/Sacha/Desktop/Phones/SymbianCPP/emi-psx/src/EmiPSX/EmiPSX.pro
	$(MAKE) -f $(MAKEFILE) qmake

sis: EmiPSX_template.pkg
	$(if $(wildcard .make.cache), $(MAKE) -f $(MAKEFILE) ok_sis MAKEFILES=.make.cache , $(if $(QT_SIS_TARGET), $(MAKE) -f $(MAKEFILE) ok_sis , $(MAKE) -f $(MAKEFILE) fail_sis_nocache ) )

ok_sis:
	C:\QtSDK\Symbian\SDKs\SymbianSR1Qt474\bin\createpackage.bat -g $(QT_SIS_OPTIONS) EmiPSX_template.pkg $(QT_SIS_TARGET) $(QT_SIS_CERTIFICATE) $(QT_SIS_KEY) $(QT_SIS_PASSPHRASE)

unsigned_sis: EmiPSX_template.pkg
	$(if $(wildcard .make.cache), $(MAKE) -f $(MAKEFILE) ok_unsigned_sis MAKEFILES=.make.cache , $(if $(QT_SIS_TARGET), $(MAKE) -f $(MAKEFILE) ok_unsigned_sis , $(MAKE) -f $(MAKEFILE) fail_sis_nocache ) )

ok_unsigned_sis:
	C:\QtSDK\Symbian\SDKs\SymbianSR1Qt474\bin\createpackage.bat -g $(QT_SIS_OPTIONS) -o EmiPSX_template.pkg $(QT_SIS_TARGET)

EmiPSX.sis:
	$(MAKE) -f $(MAKEFILE) sis

installer_sis: EmiPSX_installer.pkg sis
	$(MAKE) -f $(MAKEFILE) ok_installer_sis

ok_installer_sis: EmiPSX_installer.pkg
	C:\QtSDK\Symbian\SDKs\SymbianSR1Qt474\bin\createpackage.bat $(QT_SIS_OPTIONS) EmiPSX_installer.pkg - $(QT_SIS_CERTIFICATE) $(QT_SIS_KEY) $(QT_SIS_PASSPHRASE)

unsigned_installer_sis: EmiPSX_installer.pkg unsigned_sis
	$(MAKE) -f $(MAKEFILE) ok_unsigned_installer_sis

ok_unsigned_installer_sis: EmiPSX_installer.pkg
	C:\QtSDK\Symbian\SDKs\SymbianSR1Qt474\bin\createpackage.bat $(QT_SIS_OPTIONS) -o EmiPSX_installer.pkg

fail_sis_nocache:
	$(error Project has to be built or QT_SIS_TARGET environment variable has to be set before calling 'SIS' target)

stub_sis: EmiPSX_stub.pkg
	$(if $(wildcard .make.cache), $(MAKE) -f $(MAKEFILE) ok_stub_sis MAKEFILES=.make.cache , $(if $(QT_SIS_TARGET), $(MAKE) -f $(MAKEFILE) ok_stub_sis , $(MAKE) -f $(MAKEFILE) fail_sis_nocache ) )

ok_stub_sis:
	C:\QtSDK\Symbian\SDKs\SymbianSR1Qt474\bin\createpackage.bat -s $(QT_SIS_OPTIONS) EmiPSX_stub.pkg $(QT_SIS_TARGET) $(QT_SIS_CERTIFICATE) $(QT_SIS_KEY) $(QT_SIS_PASSPHRASE)

deploy: sis
	call EmiPSX.sis

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc\moc_mainwindow.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc\moc_mainwindow.cpp
moc\moc_mainwindow.cpp: virtualkey.h \
		emuinterface.h \
		mainwindow.h
	C:\QtSDK\Symbian\SDKs\SymbianSR1Qt474\bin\moc.exe $(DEFINES) $(INCPATH) -DSYMBIAN c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\mainwindow.h -o c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\moc\moc_mainwindow.cpp

compiler_rcc_make_all: rcc\qrc_EmiPSX.cpp
compiler_rcc_clean:
	-$(DEL_FILE) rcc\qrc_EmiPSX.cpp
rcc\qrc_EmiPSX.cpp: EmiPSX.qrc \
		data\mbutton.png \
		data\stbutton.png \
		data\slbutton.png \
		data\setaDOWN.png \
		data\emuui.qml \
		data\setaUP.png \
		data\buttonT.png \
		data\setaLEFT.png \
		data\buttonC.png \
		data\buttonX.png \
		data\rbutton.png \
		data\buttonS.png \
		data\setaRIGHT.png \
		data\lbutton.png \
		data\UI\ButtonConfig.qml
	c:\QtSDK\Symbian\SDKs\SymbianSR1Qt474\bin\rcc.exe -name EmiPSX c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX.qrc -o c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\rcc\qrc_EmiPSX.cpp

compiler_image_collection_make_all: ui\qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) ui\qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean 

dodistclean:
	-@ if EXIST "c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX_template.pkg" $(DEL_FILE)  "c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX_template.pkg"
	-@ if EXIST "c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX_stub.pkg" $(DEL_FILE)  "c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX_stub.pkg"
	-@ if EXIST "c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX_installer.pkg" $(DEL_FILE)  "c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX_installer.pkg"
	-@ if EXIST "c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\Makefile" $(DEL_FILE)  "c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\Makefile"
	-@ if EXIST "c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX_exe.mmp" $(DEL_FILE)  "c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX_exe.mmp"
	-@ if EXIST "c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX_reg.rss" $(DEL_FILE)  "c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX_reg.rss"
	-@ if EXIST "c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX.rss" $(DEL_FILE)  "c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX.rss"
	-@ if EXIST "c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX.loc" $(DEL_FILE)  "c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\EmiPSX.loc"
	-@ if EXIST "c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\bld.inf" $(DEL_FILE)  "c:\Users\Sacha\Desktop\Phones\SymbianCPP\emi-psx\src\EmiPSX\bld.inf"

distclean: clean dodistclean

clean: bld.inf
	-$(SBS) reallyclean --toolcheck=off -c winscw_udeb.mwccinc -c arm.v5.udeb.gcce4_6_3 -c arm.v6.udeb.gcce4_6_3 -c arm.v5.urel.gcce4_6_3 -c arm.v6.urel.gcce4_6_3


